﻿@{
    ViewData["Title"] = "Home Page";
}

<style>
    /* Estilos básicos para el área de arrastrar y soltar */
    .dropArea {
        border: 2px dashed #CCC;
        padding: 20px;
        text-align: center;
        cursor: pointer;
        transition: border-color 0.3s;
        height: 300px;
        border-radius: 1rem;
    }

        .dropArea.highlight {
            border-color: #007bff;
        }

    .glyphicon-cloud-upload {
        font-size: 50px;
        color: #007bff;
    }

    .droptxt {
        font-size: 1.2rem;
        margin-top: 10px;
        color: #949494;
        margin: 0;
    }

    .areaArchivo :hover {
        background: #F2FAFD;
    }
</style>

<div class="text-center">
    <h1 class="display-4 mb-4">Documentos</h1>

    <!-- Formulario para subir PDF -->
    <form asp-action="UploadPdf" method="post" enctype="multipart/form-data">
        <div class="areaArchivo">
            <!-- Área de arrastrar y soltar -->
            <div aria-live="polite" class="dropArea d-flex justify-content-center align-items-center" id="dropArea">
                <input type="file" id="pdfFile" name="pdfFile" accept="application/pdf" required hidden multiple>

                <div>
                    <div>
                        <div>
                            <span aria-hidden="true" class="glyphicon glyphicon-cloud-upload"></span>
                        </div>
                        <i style="font-size: 50px; color: #949494;" class="fa-regular fa-file-pdf mb-1"></i>
                        <div class="droptxt">Arrastre o seleccione archivos PDF</div>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-2 text-center">
            <strong>Nombre de archivo:</strong> <span id="fileName">Ningún archivo seleccionado</span>
        </div>

        <!-- Botón de enviar -->
        <div>
            <button type="submit" class="btn btn-primary mt-4">Ver PDF</button>
        </div>
    </form>

    @if (ViewBag.PdfBase64 != null)
    {
        <div class="mt-5 d-flex-column" id="areaDetalleArchivo">
            <p><strong>Hash:</strong> @ViewBag.Hash</p>
            <p><strong>Fecha:</strong> @ViewBag.Date</p>
            <iframe src="data:application/pdf;base64,@ViewBag.PdfBase64" width="600" height="400"></iframe>
        </div>
    }

    <script>
        // Vincula el clic en el área grande de arrastrar y soltar para abrir el selector de archivos
        document.getElementById('dropArea').addEventListener('click', function () {
            document.getElementById('pdfFile').click();  // Simula el clic en el input oculto
        });

        // Lógica de arrastrar y soltar
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('pdfFile');

        // Captura el cambio de selección de archivo
        fileInput.addEventListener('change', function (event) {
            const fileName = fileInput.files.length > 0 ? fileInput.files[0].name : 'Ningún archivo seleccionado';
            document.getElementById('fileName').textContent = fileName;  // Muestra el nombre del archivo seleccionado
            document.getElementById('areaDetalleArchivo').innerHTML = "";
        });

        // Resalta el área cuando el archivo se arrastra por encima
        ['dragenter', 'dragover'].forEach(eventName => {
            dropArea.addEventListener(eventName, (e) => {
                e.preventDefault();
                dropArea.classList.add('highlight');
            });
        });

        // Quita el resaltado cuando el archivo deja el área
        ['dragleave', 'drop'].forEach(eventName => {
            dropArea.addEventListener(eventName, (e) => {
                e.preventDefault();
                dropArea.classList.remove('highlight');
            });
        });

        // Maneja el drop
        dropArea.addEventListener('drop', (e) => {
            e.preventDefault();
            if (e.dataTransfer.files.length) {
                fileInput.files = e.dataTransfer.files;  // Asigna los archivos arrastrados al input
                // Captura el nombre del archivo arrastrado
                const fileName = fileInput.files[0].name;  // Captura el nombre del primer archivo arrastrado
                document.getElementById('fileName').textContent = fileName;  // Muestra el nombre del archivo
                document.getElementById('areaDetalleArchivo').innerHTML = "";
            }
        });
    </script>
</div>
